#include <iostream>
#include <vector>
#include <queue>
#include <string>
using namespace std;

class HammerBakery {
private:
    vector<User> users;
    vector<Cake> catalog;
    queue<Order> orders;
    User* loggedInUser;
void userMenu() {
        while (true) {
            cout << "\n+----------------- User Menu -----------------+\n";
            cout << "� 1. View Catalog                             �\n";
            cout << "� 2. Make Order                               �\n";
            cout << "� 3. Confirm Order                            �\n";
            cout << "� 4. Make Payment                             �\n";
            cout << "� 5. Logout                                   �\n";
            cout << "+---------------------------------------------+\n";
            cout << "Choose an option: ";
            int choice;
            cin >> choice;
            switch (choice) {
            case 1:
                showCatalog();
                break;
            case 2:
                makeOrder();
                break;
            case 3:
                confirmOrder();
                break;
            case 4:
                makePayment();
                break;
            case 5:
                loggedInUser = nullptr;
                cout << "Logged out.\n";
                return;
            default:
                cout << "Invalid option.\n";
            }
        }
    }

public:
    HammerBakery() {
        loggedInUser = nullptr;
        catalog.push_back(Cake("Lemon", "Meringue", "Small", 12000, "A tangy lemon cake with fluffy meringue topping."));
        catalog.push_back(Cake("Carrot", "Cream Cheese", "Medium", 18000, "A moist carrot cake with creamy cheese frosting."));
        catalog.push_back(Cake("Mocha", "Chocolate Shavings", "Large", 28000, "A rich mocha cake with dark chocolate shavings."));
        catalog.push_back(Cake("Coconut", "Pineapple", "Small", 14000, "A tropical coconut cake with pineapple slices."));
        catalog.push_back(Cake("Almond", "Honey Glaze", "Medium", 22000, "A delicious almond cake with honey glaze."));
        catalog.push_back(Cake("Matcha", "Red Bean", "Large", 32000, "A green tea matcha cake with sweet red bean paste."));
    }
void run() {
        cout << "\nSelamat Datang di Hammer Bakery!\n"; // Pesan selamat datang
        while (true) {
            cout << "\n+----------------- Main Menu -----------------+\n";
            cout << "� 1. Sign up                                  �\n";
            cout << "� 2. Login                                    �\n";
            cout << "� 3. Exit                                     �\n";
            cout << "+---------------------------------------------+\n";
            cout << "Choose an option: ";
            int choice;
            cin >> choice;
            switch (choice) {
            case 1:
                signUp();
                break;
            case 2:
                login();
                break;
            case 3:
                return;
            default:
                cout << "Invalid option.\n";
            }
        }
    }
};

int main() {
    HammerBakery bakery;
    bakery.run();
    return 0;
}
